volumes:
  static_files:
  esdata:
  sync_state:

x-app: &app
  build: app
  restart: "unless-stopped"
  env_file:
    - .env
  environment:
    - ELASTIC_HOST=elasticsearch
    - SQL_HOST=postgres

  nginx:
    image: nginx:1.26
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx:/etc/nginx/conf.d:ro
      - static_files:/data
    depends_on:
      - service
    ports:
      - "80:80"
    restart: always

  elasticsearch:
    image: elasticsearch:8.6.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - /home/maria/ES_dumps:/usr/share/elasticsearch/snapshots
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
      - "path.repo=/usr/share/elasticsearch/snapshots"
    restart: always

  postgres:
    image: postgres:16
    volumes:
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - postgres.env
    command:
      ["postgres", "-c", "log_statement=all"]
    restart: always

  swagger:
    image: swaggerapi/swagger-ui:v5.17.14
    volumes:
      - ./openapi.yaml:/swagger.yaml
    ports:
      - "8080:8080"
    environment:
      SWAGGER_JSON: /swagger.yaml
      BASE_URL: "/swagger/"
    restart: always

  service:
    <<: [*app]
    volumes:
      - static_files:/opt/app/static
    expose:
      - "8000"
    command: ["uwsgi", "--strict", "--ini", "uwsgi.ini"]

  django-migrations:
    <<: [*app]
    container_name: "django-migrations"
    restart: "no"
    command: [ "python", "manage.py", "migrate" ]

  postgres_to_es:
    <<: [*app]
    volumes:
      - sync_state:/opt/app/state
    command: [ "python", "manage.py", "postgres_to_es" ]
    restart: always